knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(srvyr)
tinytex::install_tinytex()
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize", paste0("\n \\", options$size,"\n\n", x, "\n\n \\normalsize"), x)
})
#Data Cleaning and Preprocessing
install.packages("readxl")
library("readxl")
library("tidyverse")
data <- read_excel("data.xlsx")
View(data)
#Data Cleaning and Preprocessing
install.packages("readxl")
library("readxl")
library("tidyverse")
data <- read_excel("data.xlsx")
keeps <- c("reportyear", "race_eth_code","county_name", "region_name", "strata_one_name","numerator","denominator","estimate","LL_95CI","UL_95CI","se", "rse","ca_rr","vap")
data <- data[keeps]
install.packages("readxl")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(srvyr)
tinytex::install_tinytex()
data <- data[keeps]
keeps <- c("reportyear", "race_eth_code","county_name", "region_name", "strata_one_name","numerator","denominator","estimate","LL_95CI","UL_95CI","SE", "RSE","CA_RR","vap")
data <- data[keeps]
#Data Cleaning and Preprocessing
install.packages("readxl")
library("readxl")
library("tidyverse")
data <- read_excel("data.xlsx")
keeps <- c("reportyear", "race_eth_code","county_name", "region_name", "strata_one_name","numerator","denominator","estimate","LL_95CI","UL_95CI","SE", "RSE","CA_RR","vap")
data <- data[keeps]
cps_svy <- as_survey_design(data)
data %>%
group_by(reportyear = 2016) %>%
filter(estimate = "No data") %>%
View(cps_svy)
data %>%
filter(reportyear = 2016) %>%
filter(estimate != 'No data') %>%
group_by(county_name) %>%
summarize(
counties = survey_prop()
)
data %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(county_name) %>%
summarize(
counties = survey_prop()
)
data %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(county_name) %>%
summarize(
counties = survey_mean()
)
#Data Cleaning and Preprocessing
install.packages("readxl")
library("readxl")
library("tidyverse")
data <- read_excel("data.xlsx")
keeps <- c("reportyear", "race_eth_code","county_name", "region_name", "strata_one_name","numerator","denominator","estimate","LL_95CI","UL_95CI","SE", "RSE","CA_RR","vap")
data <- data[keeps]
cps_svy <- as_survey_design(data)
data %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(county_name) %>%
summarize(
n = unweighted(n())
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(county_name) %>%
summarize(
n = unweighted(n())
)
View(data)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = unweighted(n())
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = sum(vap)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = sum(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2018) %>%
group_by(region_name) %>%
summarize(
n = sum(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(county_name) %>%
summarize(
n = sum(vap, na.rm = FALSE)
)
library("dplyr")
cps_svy %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(county_name) %>%
summarize(
n = sum(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = survey_total(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(county_name = Nevada) %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = survey_total(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(county_name == Nevada) %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = survey_total(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(county_name == "Nevada") %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = survey_total(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(strata_one_name == "Voter Participation") %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = survey_total(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(strata_one_name == "Voter Participation") %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = sum(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(strata_one_name == "Voter Participation") %>%
filter(estimate != 'No data') %>%
group_by(region_name) %>%
summarize(
n = sum(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(strata_one_name == "Voter Participation") %>%
group_by(region_name) %>%
summarize(
n = sum(vap, na.rm = FALSE)
)
cps_svy %>%
filter(reportyear == 2016) %>%
filter(strata_one_name == "voter participation") %>%
group_by(region_name) %>%
summarize(
n = sum(vap, na.rm = FALSE)
)
data %>%
drop_na()
data <- data[!(data == "No data")]
data %>% replace_with_na(replace = list(x = "No data"))
library("tidyverse")
data %>% replace_with_na(replace = list(x = "No data"))
data %>% na_if("No data")
View(data)
data %>% mutate(across(where(is.character), ~na_if(., "No data")))
data <- data %>% mutate(across(where(is.character), ~na_if(., "No data")))
View(data)
data <- na.omit(data)
---
title: "Assignment 04"
author: "Sahana Srinivasan and Maria Antonella Pareira"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(srvyr)
tinytex::install_tinytex()
```
```{r}
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize", paste0("\n \\", options$size,"\n\n", x, "\n\n \\normalsize"), x)
})
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r}
#Data Cleaning and Preprocessing
library("ipumsr")
library("tidyverse")
library("dplyr")
ddi <- read_ipums_ddi("cps_00002.xml")
data <- read_ipums_micro(ddi)
data1 <- data %>%
drop_na(WTFINL)
library(srvyr)
cps_svy <- as_survey_design(data1, weights = WTFINL)
class(cps_svy)
class(data)
#Visualization 1: Female and Employment Rate From 1980 Onwards
library("ggplot2")
library("haven")
cps_svy %>%
mutate(female = if_else(SEX == 2, 1, 0)) %>%
mutate(employed = if_else(EMPSTAT == 10 | EMPSTAT == 12, 1, 0)) %>%
mutate(unemployed = if_else(EMPSTAT == 10 | EMPSTAT == 12, 0, 1)) %>%
filter (female == 1,  AGE >= 16) %>%
group_by(YEAR) %>%
summarize(
employed = survey_mean(employed == 1)
) %>%
ggplot(mapping = aes(x = YEAR, y = employed)) +
geom_line() +
theme_minimal() +
labs(
title = "Female Employment Rate 1980-2020, Upon Start of Each Decade",
subtitle = "Female employment rate peaked in 2000 and has decreased since",
x = "Year",
y = "Female Employment Rate",
caption = "Source = Sarah Flood, Miriam
King, Renae Rodgers, Steven Ruggles, J. Robert
Warren and Michael Westberry. Integrated Public
Use Microdata Series, Current Population Survey:
Version 9.0 [dataset]. Minneapolis, MN: IPUMS,
2021. https://doi.org/10.18128/D030.V9.0*"
)
```
```{r}
#Visualization 2: Employment by Generation
cps_svy %>%
mutate(female = if_else(SEX == 2, 1, 0)) %>%
mutate(age_category = case_when( #create variable for generations
AGE <= 9 ~ "Youth",
AGE <= 25 ~ "Gen Z" ,
AGE <= 41 ~ "Millenials",
AGE <= 57 ~ "Gen X",
AGE <= 67 ~ "Boomers 2",
AGE <= 76 ~ "Boomers 1",
AGE <= 94 ~ "Post War",
TRUE ~ "WWII"
)
) %>%
mutate(
employed = if_else(EMPSTAT == 10 | EMPSTAT == 12, 1, 0)) %>%
filter(YEAR == 2020) %>%
filter(female == 1, AGE >= 16) %>%
group_by(age_category) %>%
summarize(
employed = mean(employed == 1),
) %>%
ggplot(mapping = aes(x = age_category, y = employed)) +
geom_col(color = "blue", fill = "red") +
theme_minimal() +
labs(
title = "Proportion of Females Employed By Generation in 2020",
subtitle = "Female employment is highest among millenials and lowest among post-war",
x = "Generations",
y = "Proportion of Females Employed",
caption = "Source = Sarah Flood, Miriam
King, Renae Rodgers, Steven Ruggles, J. Robert
Warren and Michael Westberry. Integrated Public
Use Microdata Series, Current Population Survey:
Version 9.0 [dataset]. Minneapolis, MN: IPUMS,
2021. https://doi.org/10.18128/D030.V9.0*"
)
```
```{r}
#Visualization 3:
cps_svy %>%
mutate(race = case_when(
RACE == 100 ~ "White",
RACE == 200 ~ "Black",
RACE == 300 ~ "American Indian/Aleut/Eskimo",
RACE == 650 | RACE == 651 ~ "Asian",
RACE <= 830 | RACE >= 700 ~ "Other")) %>%
mutate(
employed = if_else(EMPSTAT == 10 | EMPSTAT == 12, 1, 0)) %>%
mutate(gender = case_when(
SEX == 1 ~ "Male",
SEX == 2 ~ "Female")) %>%
filter (YEAR == 2020) %>%
filter (employed == 1, AGE >= 16) %>%
ggplot2 (mapping = aes( x = gender , y = race)) +
geom_count(color = "blue", fill = "blue", shape = 21)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(srvyr)
tinytex::install_tinytex()
cps_svy %>%
mutate(race = case_when(
RACE == 100 ~ "White",
RACE == 200 ~ "Black",
RACE == 300 ~ "American Indian/Aleut/Eskimo",
RACE == 650 | RACE == 651 ~ "Asian",
RACE <= 830 | RACE >= 700 ~ "Other")) %>%
mutate(
employed = if_else(EMPSTAT == 10 | EMPSTAT == 12, 1, 0)) %>%
mutate(gender = case_when(
SEX == 1 ~ "Male",
SEX == 2 ~ "Female")) %>%
filter (YEAR == 2020) %>%
filter (employed == 1, AGE >= 16) %>%
ggplot (mapping = aes( x = gender , y = race)) +
geom_count(color = "blue", fill = "blue", shape = 21)
